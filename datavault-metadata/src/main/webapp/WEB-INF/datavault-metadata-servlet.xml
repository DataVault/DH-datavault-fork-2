<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="org.datavaultplatform.metadata.controllers"/>

    <mvc:annotation-driven />

    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>

    <!--  static resources -->
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!--
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    -->



    <!--
    View resolvers can also be configured with ResourceBundles or XML files. If you need
    different view resolving based on Locale, you have to use the resource bundle resolver.
    -->
    <!--
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
    </bean>
    -->

    <bean id="indexController" class="org.datavaultplatform.metadata.controllers.IndexController">
    </bean>

    <bean id="projectsController" class="org.datavaultplatform.metadata.controllers.ProjectsController">
        <property name="projectsService" ref="projectsService" />
    </bean>

    <bean id="datasetsController" class="org.datavaultplatform.metadata.controllers.DatasetsController">
        <property name="datasetsService" ref="datasetsService" />
    </bean>

    <!-- todo : should the service beans be put into their own config file? -->
    
    <bean id="projectsService" class="org.datavaultplatform.metadata.services.ProjectsService">
    </bean>
    
    <bean id="datasetsService" class="org.datavaultplatform.metadata.services.DatasetsService">
    </bean>

    <!-- Documentation using jsondoc -->

    <bean id="documentationController" class="org.jsondoc.springmvc.controller.JSONDocController">
        <constructor-arg name="version" value="1.0" />
        <constructor-arg name="basePath" value="${metadataURL}" />
        <constructor-arg name="packages">
            <list>
                <value>org.datavaultplatform.metadata.controllers</value>
                <value>org.datavaultplatform.common.metadata</value>
            </list>
        </constructor-arg>
        <property name="playgroundEnabled" value="true" />
        <property name="displayMethodAs" value="URI" />
    </bean>
    
</beans>